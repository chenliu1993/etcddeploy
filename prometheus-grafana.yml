version: "3"
networks:
  front-tier:
  back-tier:
services:
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    volumes:
      - /home/vagrant/prometheus/config:/etc/prometheus
      - /home/vagrant/prometheus/data:/prometheus
    ports:
      - 9090:9090
    user: "1000:1000"
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
#      - pushgateway:pushgateway
    depends_on:
      - cadvisor
#      - pushgateway
    networks:
      - back-tier
    restart: always
  node_exporter:
    image: bitnami/node-exporter:1.6.1-debian-11-r61
    container_name: node_exporter
    command: 
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - back-tier
    restart: always
    deploy:
      mode: global
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave
  alertmanager:
    image: prom/alertmanager:v0.26.0
    ports:
      - 9093:9093
    #volumes:
    #  - /home/vagrant/prometheus/alertmanager/:/etc/alertmanager/
    networks:
      - back-tier
    restart: always
    command:
      #- '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
#    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    networks:
      - back-tier
    restart: always
    deploy:
      mode: global

  grafana:
    image: grafana/grafana:10.1.2
    user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    # volumes:
      # - /home/vagrant/prometheus/grafana-data:/var/lib/grafana
      # - /home/vagrant/prometheus/grafana/provisioning/:/etc/grafana/provisioning/
    #env_file:
    #  - /home/vagrant/prometheus/grafana/config.monitoring
    networks:
      - back-tier
      - front-tier
    restart: always
